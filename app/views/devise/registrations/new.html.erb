<header>
  <div class="authentication-header">
    <div class="navigation-container">
      <%= icon "chevron-left" %>
      <span><%= link_to "Home", dashboard_index_path, class: "home-page-link" %></span>
    </div>
    <div class="authentication-main-title">
      <h1> The Newsroom </h1>
    </div>
  </div>
</header>

<div class="form-content">
  <%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
    <%= render "devise/shared/error_messages", resource: resource %>

    <div class="field-group">
      <div class="form-group">
        <%= f.text_field :first_name, class: "form-control", placeholder:" ", required: true %>
        <%= f.label :first_name %>
      </div>
    
      <div class="form-group">
        <%= f.text_field :surname, class: "form-control", placeholder:" ", required: true %>
        <%= f.label :surname %>
      </div>

    </div>  

    <div class="field-group">
      
      <div class="form-group">
        <%= f.select :gender, options_for_select(['Male', 'Female', 'Not Specified']), { prompt: " -- Select One -- "}, { class: "form-control registration_select", placeholder:" ",required: "true" } %>
        <%= f.label :gender %>
      </div>

      <div class="form-group">
        <%= f.date_field :date_of_birth, class: "form-control", placeholder:" ", required: true %>
        <%= f.label :date_of_birth %>
      </div>
      
    </div>  
    
    <div class="form-group">
      <%= f.email_field :email, class: "form-control", placeholder:" ", required: true %>
      <%= f.label :email %>
      <%= icon "circle-check", class: "icon-check icon-display", id: "email-correct" %>
      <%= icon "circle-alert", class: "icon-alert icon-display", id: "email-alert" %>
      <span class="validation-hint", hidden="false", id="email-warning"> Invalid Email </span>
    </div>

    <div class="field-group">
    
      <div class="form-group">
        <%= f.password_field :password, class: "form-control", placeholder:" ", required: true %>
        <%= f.label :password %>
        <%= icon "eye", class: "show-hide-password", id: "display-password" %>
      </div>

      <div class="form-group">
        <%= f.password_field :password_confirmation, class: "form-control", placeholder:" ", required: true %>
        <%= f.label :password_confirmation %>
      </div>

    </div>
    <div class="password-validation-feedback" id="password-feedback"></div>

    <div class="password-hints">
      <h5> For your security please ensure your password: </h5>
      <ul class="password-hints-text">
        <li>Is between 8 and 30 characters long</li>
        <li>Contains a mix of upper (capital) and lower case letters</li>
        <li>Contains at least one number</li>
        <li>Contains at least one special character (* : @ | # % , . ; [ ] { } ? - _ ~ $ & < > ‘ “ ^ ( ) / ! `)</li>
      </ul>
    </div>

    <%#= f.rich_text_area :content %>

    <div class="form-actions">
      <%= f.submit "Register Now", disabled: true, class: "registration_submission", id: "new_user_registration" %>
      <div class="additional-link">
        <p> Already have an account? <span><%= link_to "Login", new_user_session_path, class: "registration_login_link", data: { turbo: false } %></span></p>
      </div>
    </div>
  <% end %>
</div>

<script>
  const myForm = document.getElementById('new_user');
  const inputFields = myForm.querySelectorAll('[required]');
  const registrationSubmitButton = document.getElementById('new_user_registration');
  const loginSubmitButton = document.getElementById('new_user_session');
  const passwordResetSubmitButton = document.getElementById('password_reset_submit');
  const emailField = document.getElementById('user_email');
  const EmailValidationHint = document.getElementById('email-warning');
  const EmailValidationCheckIcon = document.getElementById('email-correct');
  const EmailValidationAlertIcon = document.getElementById('email-alert');
  const passwordField = document.getElementById('user_password');
  const passwordConfirmationField = document.getElementById('user_password_confirmation');
  const showHidePasswordIcon = document.getElementById('display-password');
  const passwordValidation = document.getElementById('password-feedback');

  function validateForm() {
      let allFieldsFilled = true;
      inputFields.forEach(field => {
          if (field.value.trim() === '') { 
              allFieldsFilled = false;
          }
      });
      if( registrationSubmitButton !== null ){
          registrationSubmitButton.disabled = !allFieldsFilled;
      } else if( loginSubmitButton !== null ){
          loginSubmitButton.disabled = !allFieldsFilled;
      } else if( passwordResetSubmitButton !== null){
          passwordResetSubmitButton.disabled = !allFieldsFilled;
      }
  }

  inputFields.forEach(field => {
      field.addEventListener('keyup', validateForm);
  });

  function emailIsValid (event) {
      const pattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
      if (pattern.test(event.target.value)){
          EmailValidationHint.setAttribute("hidden","true");
          emailField.classList.remove("invalid-email");
          EmailValidationCheckIcon.classList.remove("icon-display");
          EmailValidationAlertIcon.classList.add("icon-display");
      } else {
          EmailValidationHint.removeAttribute("hidden");
          emailField.classList.add("invalid-email");
          EmailValidationAlertIcon.classList.remove("icon-display");
          EmailValidationCheckIcon.classList.add("icon-display");
      }
  }



  emailField.addEventListener('keyup', emailIsValid);

  showHidePasswordIcon.addEventListener('click', function(){
      const type = passwordField.getAttribute('type');
      if ( type === 'password'){
          passwordField.setAttribute('type', 'text');
      } else {
          passwordField.setAttribute('type', 'password');
      }
  });

  function validatePassword(password) {
      let feedback = [];

      if (password.length < 8) {
          feedback.push("Password must be at least 8 characters long.");
      }

      if (!/[A-Z]/.test(password)) {
          feedback.push("Password must contain at least one uppercase letter.");
      }

      if (!/[a-z]/.test(password)) {
          feedback.push("Password must contain at least one lowercase letter.");
      }

      if (!/[0-9]/.test(password)) {
          feedback.push("Password must contain at least one number.");
      }

      if (!/[!@#$%^&*()]/.test(password)) {
          feedback.push("Password must contain at least one special character.");
      }

      return feedback;
  }

  passwordField.addEventListener('keyup', function(){
      const messages = validatePassword(passwordField.value);
      if (messages.length > 0) {
          passwordValidation.innerHTML = messages.map(msg => `<p class="invalid">${msg}</p>`).join('');
      } else {
          passwordValidation.innerHTML = '';
      }
  });

  // passwordConfirmationField.addEventListener('keyup', function(){
  //     const messages = validatePassword(passwordConfirmationField.value);
  //     if (messages.length > 0) {
  //         passwordValidation.innerHTML = messages.map(msg => `<p class="invalid">${msg}</p>`).join('');
  //     } else {
  //         passwordValidation.innerHTML = '';
  //     }
  // });
</script>
